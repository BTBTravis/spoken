{:rename-macros {}, :renames {}, :externs {console {log {}}, Object {}, parseInt {}, process {env {}}}, :use-macros {go cljs.core.async.macros}, :excludes #{}, :name server.core, :imports nil, :requires {pretty cljs.pprint, socket.io socket.io, p promesa.core, promesa.core promesa.core, express express, cors cors, async cljs.core.async, cljs.core.async cljs.core.async, cljs.nodejs cljs.nodejs, cljs.pprint cljs.pprint, nedb nedb, watson-developer-cloud watson-developer-cloud, nodejs cljs.nodejs, s socket.io, str clojure.string, clojure.string clojure.string, body-parser body-parser}, :cljs.spec/speced-vars [], :uses {<! cljs.core.async, close! cljs.core.async, chan cljs.core.async, >! cljs.core.async, put! cljs.core.async}, :defs {log {:name server.core/log, :file "src/server/core.cljs", :line 19, :column 1, :end-line 19, :end-column 9, :meta {:file "/home/travis/Documents/spoken/backend/src/server/core.cljs", :line 19, :column 6, :end-line 19, :end-column 9}, :tag js}, latestUpdate {:protocol-inline nil, :meta {:file "/home/travis/Documents/spoken/backend/src/server/core.cljs", :line 98, :column 7, :end-line 98, :end-column 19, :arglists (quote ([]))}, :name server.core/latestUpdate, :variadic false, :file "src/server/core.cljs", :end-column 19, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 98, :end-line 98, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, allUpdates {:protocol-inline nil, :meta {:file "/home/travis/Documents/spoken/backend/src/server/core.cljs", :line 82, :column 7, :end-line 82, :end-column 17, :arglists (quote ([]))}, :name server.core/allUpdates, :variadic false, :file "src/server/core.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 82, :end-line 82, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, addQue {:name server.core/addQue, :file "src/server/core.cljs", :line 135, :column 1, :end-line 135, :end-column 12, :meta {:file "/home/travis/Documents/spoken/backend/src/server/core.cljs", :line 135, :column 6, :end-line 135, :end-column 12}, :tag any}, io {:name server.core/io, :file "src/server/core.cljs", :line 28, :column 1, :end-line 28, :end-column 8, :meta {:file "/home/travis/Documents/spoken/backend/src/server/core.cljs", :line 28, :column 6, :end-line 28, :end-column 8}, :tag any}, -main {:protocol-inline nil, :meta {:file "/home/travis/Documents/spoken/backend/src/server/core.cljs", :line 291, :column 7, :end-line 291, :end-column 12, :arglists (quote ([& args])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}}, :name server.core/-main, :variadic true, :file "src/server/core.cljs", :end-column 12, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}, :method-params [(args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 291, :end-line 291, :max-fixed-arity 0, :fn-var true, :arglists ([& args])}, db {:name server.core/db, :file "src/server/core.cljs", :line 22, :column 1, :end-line 22, :end-column 8, :meta {:file "/home/travis/Documents/spoken/backend/src/server/core.cljs", :line 22, :column 6, :end-line 22, :end-column 8}, :tag server.core/node$module$nedb}, server {:name server.core/server, :file "src/server/core.cljs", :line 27, :column 1, :end-line 27, :end-column 12, :meta {:file "/home/travis/Documents/spoken/backend/src/server/core.cljs", :line 27, :column 6, :end-line 27, :end-column 12}, :tag any}, faketxt {:name server.core/faketxt, :file "src/server/core.cljs", :line 21, :column 1, :end-line 21, :end-column 13, :meta {:file "/home/travis/Documents/spoken/backend/src/server/core.cljs", :line 21, :column 6, :end-line 21, :end-column 13}, :tag string}, addUpdate {:protocol-inline nil, :meta {:file "/home/travis/Documents/spoken/backend/src/server/core.cljs", :line 59, :column 7, :end-line 59, :end-column 16, :arglists (quote ([userstr start end]))}, :name server.core/addUpdate, :variadic false, :file "src/server/core.cljs", :end-column 16, :method-params ([userstr start end]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 59, :end-line 59, :max-fixed-arity 3, :fn-var true, :arglists (quote ([userstr start end]))}, currentWord {:protocol-inline nil, :meta {:file "/home/travis/Documents/spoken/backend/src/server/core.cljs", :line 116, :column 7, :end-line 116, :end-column 18, :arglists (quote ([]))}, :name server.core/currentWord, :variadic false, :file "src/server/core.cljs", :end-column 18, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 116, :end-line 116, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, sttAuthService {:name server.core/sttAuthService, :file "src/server/core.cljs", :line 267, :column 1, :end-line 267, :end-column 20, :meta {:file "/home/travis/Documents/spoken/backend/src/server/core.cljs", :line 267, :column 6, :end-line 267, :end-column 20}, :tag server.core/node$module$watson_developer_cloud.AuthorizationV1}, app {:name server.core/app, :file "src/server/core.cljs", :line 25, :column 1, :end-line 25, :end-column 9, :meta {:file "/home/travis/Documents/spoken/backend/src/server/core.cljs", :line 25, :column 6, :end-line 25, :end-column 9}, :tag any}, http {:name server.core/http, :file "src/server/core.cljs", :line 26, :column 1, :end-line 26, :end-column 10, :meta {:file "/home/travis/Documents/spoken/backend/src/server/core.cljs", :line 26, :column 6, :end-line 26, :end-column 10}, :tag any}}, :cljs.spec/registry-ref [], :require-macros {cljs.core.async.macros cljs.core.async.macros, pretty cljs.pprint, cljs.pprint cljs.pprint, async cljs.core.async, cljs.core.async cljs.core.async}, :cljs.analyzer/constants {:seen #{:_id :cword :else :err :lupdate :recur :bits :alternatives :word :status :res :end :transcript :keywordize-keys :user}, :order [:transcript :alternatives :keywordize-keys :err :res :end :recur :else :word :user :cword :lupdate :_id :bits :status]}, :doc nil}